
DEF SEG
'screen 2
RANDOMIZE TIMER

%COMPILE = 0
CLS
'WINDOW (0,0)-(100,100)
'VIEW (570,280)-(700,346),0,1
'WINDOW (0,0)-(100,100)
'CIRCLE (50,50),10

DIM TASKARRAY%(30,6) 'HOLDS INSTRUMENT SPACING AND MAX VALUE OF ATTRIBUTES IN 1,2,3
DIM TASKNAMES$(30,2) 'HOLDS INTRUMENT ATTRIBUTE NAMES IN COL 1


DIM SONGPARMS%(24,6) 'HOLDS SPACING AND MAX VALUE OF ATTRIBUTES IN 1,2,3
DIM SONGPARMS$(24,2) 'HOLDS ATTRIBUTE NAMES IN COL 1

CALL INITINST
CALL INITSONG


AX=1:BX=2:CX=3:DX=4:MSTATUS%=0:MUSIC$="":STRSEG%=0:HZ%=40:IBANK$=""
INSNUM%=1
CALL VERSION   '0
CALL RESETDRV   '8
CALL MSTATUS    '1
CALL CLOCKRATE  '4
CALL SYSCLOCK   '3

MAKEMUSIC:

INSNUM%=1
CALL MAKESCALE

GETLOCS:
CALL MUSICLOC

CLS

LOCATE 7,1
? "                     welcome to   AIMUS-I.BAS                  "
LOCATE 9,1
? "      MAKE SURE CAPS LOCL IS ON !
LOCATE 13,1
? "          TYPE ( I ) to create an Instrument"
? "               ( S ) TO craste a  SONG"
? " "
? "                       ( E ) TO END."



LOOPTOP:
'CLS

A$=INKEY$
IF A$="I" THEN
CLS
CALL INSTRUMENT
ELSEIF A$="S" THEN
CLS
CALL MODISONG
ELSEIF A$="E" THEN
CLS
lOCATE 15,1
? "                  GOODBYE from AIMUSIC-I.BAS !"
GOTO ENDD

END IF

IF A$<>"" THEN
CLS
LOCATE 7,1
? "                     welcome to   AIMUS-I.BAS                  "
LOCATE 9,1
? "      MAKE SURE CAPS LOCL IS ON !
LOCATE 13,1
? "          TYPE ( I ) to create an Instrument"
? "               ( S ) TO craste a  SONG"
? " "
? "                       ( E ) TO END."


END IF

GOTO LOOPTOP

'*************** HELPER Help Procedure **************

SUB HELPER
Shared Redraw
Redraw=1
Cls
? " "
? " "
? " "
? "             TO:                                Press:  "
? "   "
? "         Switch Screens                        HOME"
? " "
? "         Increment Parameter                   UP Arrow"
? "         Decrement Parameter                   DOWN Arrow"
? "         Back Up                               LEFT Arrow"
? "         Next Parameter                        RIGHT Arrow"
? " "
? "         Create a New Song                      * key"
? " "
? "         Speed Up Tempo                        PgUp"
? "         Slow Down Tempo                       PgDn"
? " "
? "         Toggle On/Off Auto Test Note          Del"
? " "
? "         Play Song                             Ins"
? "         Play Note                             End"
? " "
? "               Hit HOME to return to Previous Screen"
HELPLOOP:
S$=Inkey$
  If Right$(s$,1)<>"K" and LEN(S$)<>2 THEN
     GOTO HELPLOOP
  END IF
CLS
END Sub

'*****************INSTRUMENT array loader**************
SUB INITINST

SHARED TASKARRAY%(),TASKNAMES$()

FOR A1=1 TO 29
FOR A2=1 TO 3
READ TASKARRAY%(A1,A2)
NEXT A2
NEXT A1

FOR A1=1 TO 29
READ TASKNAMES$(A1,1)
NEXT A1

FOR A1=1 TO 29
FOR A2=5 TO 6
READ TASKARRAY%(A1,A2)
NEXT A2
NEXT A1

FOR A1=1 TO 29
TASKARRAY%(A1,4)=CINT(TASKARRAY%(A1,1)/3)
IF A1=14 OR A1 = 12 THEN TASKARRAY%(A1,4)=0
NEXT A1

'MAXIMUM, PRINT POSITION AND BYTE NUMBER DATA FOR EACH ITEM
DATA 1,7,1,1,6,1,1,5,1,1,4,1,&B1111,0,1,1,7,2,1,6,2,1,5,2,1,4,2,&B1111,0,2
DATA &B11,6,3,&B111111,0,3,&B11,6,4,&B111111,0,4,15,4,5,15,0,5,15,4,6,15,0,6
DATA 15,4,7,15,0,7,15,4,8,15,0,8,0,2,9,3,0,9,0,2,10,3,0,10
DATA 0,4,11,7,1,11,1,0,11

'DATA LABELS
dATA PITCH VIBRATO -AM,AMPLITUDE VIB -VIB,SUSTAIN Y/N -EG,ENV SCALE -KSR,FREQ. MULT
dATA PITCH VIBRATO -AM,AMPLITUDE VIB -VIB,SUSTAIN Y/N -EG,ENV SCALE -KSR,FREQ. MULT
DATA LEVEL SCALING -KSL,OUTPUT LEVEL -TL
DATA LEVEL SCALING -KSL,OUTPUT LEVEL -TL
DATA ATTACK RATE -AR,DECAY RATE -DR
DATA ATTACK RATE -AR,DECAY RATE -DR
DATA SUSTAIN LEVEL -SL,RELEASE RATE -RR
DATA SUSTAIN LEVEL -SL,RELEASE RATE -RR
DATA UNUSED,WAVE SELECT -WS
DATA UNUSED,WAVE SELECT -WS
DATA UNUSED,MODULATOR FEEDBACK -FB,CONNECTION Y/N

'PRINTING POSITION DATA
DATA 1,1,2,1,3,1,4,1,5,1,1,40,2,40,3,40,4,40,5,40
DATA 7,1,8,1,7,40,8,40
DATA 9,1,10,1,9,40,10,40,11,1,12,1,11,40,12,40
DATA 14,1,15,1,14,40,15,40
DATA 17,25,18,25,19,25
END SUB

'*****************INITIATE THE SONG PARM ARRAY**************
SUB initsong

SHARED SONGPARMS%(),SONGPARMS$()  ' SHOULD THEY RETAIN VALUE WHEN END SUB?

CLOCKSPD%=96                                                  '1
TEMPO%=120                                                    '2
CLENGTH%=4                                                    '3
LENGTHDEV%=2                                                  '4
FRONTDELAY%=0                                                 '5
BACKDELAY%=0                                                  '6
CENTERNOTE%=44'60  ' IN MIDI NOTE NUMBER 60 IS MIDDLE C       '7
PITCHDEV%=6        ' IN NOTES                                 '8
STRIKE%=0                                                     '9
NOTENUM%=34                                                   '10
MAXCHAN%=15                                                   '11
MINCHAN%=12                                                   '12
MAXPATTERNS%=6  'MAX NUMBER OF PATTERNS TO CHOSE FROM         '13
MINPATTERNS%=3                                                '14
MAXPATTCNTS%=5   ' MAX NUMBER OF PATTERN SWITCHES TO MAKE     '15
MINPATTCNTS%=5                                                '16
MAXMINIPATS%=3   'MAX NUMBER OF MINIPATTERNS TO CHOOSE FROM   '17
MINMINIPATS%=2                                                '18
MAXMINIPATSCNTS%=2  'MAX NUMBER OF MINIPATTERNS IN A PATTERN  '19
MINMINIPATSCNTS%=1                                            '20
MAXPATSNOTES%=25  'MAX NUMBER OF NOTES IN A MINIPATTERN       '21
MINPATSNOTES%=22                                              '22
'CHANNELS                                                      '23
'SHARPS & FLATS?                                               '24

ITEMNUM%=1
ITEMMAX%=24     'NUMBER OF ITEMS
ITEMMIN%=1      ' FIRST ITEM
MIN%=0          ' ALL ITEMS MINIMUM VALUE
MAX%=0

   KEYCOUNT%=SONGPARMS%(1,4) 'ORIGINAL VARIABLE VALUE
   MIN%=0                    'ORIGINAL VARIABLE VALUE
   MAX%=SONGPARMS%(1,1)      'ORIGINAL VARIABLE VALUE


'DIM songparms%(ITEMMAX%,6) 'HOLDS SPACING AND MAX VALUE OF ATTRIBUTES IN 1,2,3
'DIM songparmS$(ITEMMAX%,2) 'HOLDS ATTRIBUTE NAMES IN COL 1

FOR A1=1 TO ITEMMAX%
READ SONGPARMS$(A1,1)
'PRINT SONGPARMS$(A1,1)
NEXT A1

DATA CLOCKSPEED,TEMPO,CLENGTH,LENGTHDEVIATION,FRONTDELAY,BACKDELAY,CENTERNOTE
DATA PITCHDEVIATION,STRIKEFORCE,NUMBER OF NOTES,MAX # OF CHANNELS
DATA MIN # OF CHANNELS,MAX # OF PATTERNS,MIN # OF PATTERNS,MAXPATTCNTS
DATA MINPATTCNTS,MAXMINIPATS,MINMINIPATS,MAXMINIPATSCNTS,MINMINIPATSCNTS
DATA MAXPATSNOTES,MINPATSNOTES,# OF INSTRUMENTS,SHARPS? Y/N

FOR A1=1 TO 24
FOR A2=5 TO 6
'PRINT "    THIS IS ITT"
'READ ITT$
'PRINT ITT$
READ SONGPARMS%(A1,A2)
'PRINT SONGPARMS%(A1,A2)
'PRINT A1,A2
NEXT A2
NEXT A1

'PRINTING POSITION DATA
DATA 2,1, 2,40, 3,1, 3,40, 4,1, 4,40, 5,1, 5,40, 6,1, 6,40, 7,1, 7,40
DATA 8,1, 8,40, 9,1, 9,40, 10,1, 10,40, 11,1, 11,40, 12,1, 12,40, 13,20, 14,20

FOR A1=1 TO ITEMMAX%
SONGPARMS%(A1,0)=0
SONGPARMS%(A1,1)=127
SONGPARMS%(A1,4)=5
NEXT A1

SONGPARMS%(9,0)=0              'VELOCITY STRIKE FORCE
SONGPARMS%(9,1)=127
SONGPARMS%(9,4)=64

SONGPARMS%(7,0)=0             'CENTERNOTE
SONGPARMS%(7,1)=127
SONGPARMS%(7,4)=64
END SUB

'*F0******************* GET CMF FILE VERSION # ********************
SUB VERSION
SHARED BX,AX
REG BX,0
CALL INTERRUPT &h80
Y%=REG(AX)
PRINT
PRINT Y%
PRINT "VERSION IS ";HEX$(Y%)
END SUB

' ******************* GET LOCATION INFO OF MUSIC (SONG) STRING **********
SUB MUSICLOC
SHARED MUSIC$,STRSEG%,MLNGTH%,OFFSET%
DEF SEG
STRSEG%=PEEK(0)+PEEK(1)*256
DEF SEG=VARSEG(MUSIC$)
MLNGTH%= (PEEK(VARPTR(MUSIC$)) AND &B11111111) + (PEEK(VARPTR(MUSIC$)+1) AND &B01111111) *256         '**********************************
OFFSET%=PEEK(VARPTR(MUSIC$)+2)+PEEK(VARPTR(MUSIC$)+3)*256
DEF SEG
END SUB

'*F1******************** PASS MUSIC STATUS LOCATION ****************
SUB MSTATUS
SHARED AX,BX,CX,DX,MSTATUS%
REG BX,1
REG DX,VARSEG(MSTATUS%)
REG AX,VARPTR(MSTATUS%)
CALL INTERRUPT &H80
LOCATE 23,1
PRINT "                                                                 "
LOCATE 23,1
PRINT "MSTATUS ADDRESS IS ";VARSEG(MSTATUS%);":";VARPTR(MSTATUS%)
END SUB

'*F8************* RESET DRIVER ***************
SUB RESETDRV
SHARED BX,AX
REG BX,8
CALL INTERRUPT &H80
Y%= REG(AX)
PRINT "SYSTEM PRESET WITH ";
IF Y%=0 THEN
PRINT "NO ERROR"
END IF
IF Y%=1 THEN
PRINT "ERROR!!!"
END IF
PRINT "AX=";Y%
END SUB

'******************** GET IBANK LOCS *****************************
SUB INSLOC
shared IBANK$,IOFFSET%,STRSEG%,INSNUM%

DEF SEG
STRSEG%=PEEK(0)+PEEK(1)*256
DEF SEG=VARSEG(IBANK$)
IOFFSET%=PEEK(VARPTR(IBANK$)+2)+PEEK(VARPTR(IBANK$)+3)*256
DEF SEG
'INSNUM%=1    ' USE  TO INACTIVATE NUMEROUS INSTRUMENTS
END SUB

'*F2******************* PASS INSTRUMENT INFORMATION *************

SUB INSPASS
'GOTO SKIPINS
SHARED AX,BX,CX,DX,STRSEG%,IOFFSET%,INSNUM%
REG BX,2
REG CX,INSNUM%
REG DX,STRSEG%
REG AX,IOFFSET%
CALL INTERRUPT &H80
SKIPINS:
END SUB

'*F4******************** SET MUSIC TEMPO CLOCK RATE ****************
SUB CLOCKRATE
SHARED AX,BX,HZ%
REG BX,4
 IF HZ%<21 THEN
 LOCATE 20,25
 PRINT "                               "
 LOCATE 20,25
 PRINT "MINIMUM RATE IS 21/SEC"
 HZ%=21
 END IF
 IF HZ%>15000 THEN
 HZ%=15000
 LOCATE 20,25
 PRINT "                               "
 LOCATE 20,25
 PRINT " MAX RATE IS 15000/SEC"
 END IF

DIV=1193180/HZ%
REG AX,DIV
CALL INTERRUPT &H80
LOCATE 20,25
 PRINT "                               "
 LOCATE 20,25
 PRINT "MUSIC CLOCK SET AT ";HZ%;"HZ"
END SUB

'*F3******************** SYSTEM CLOCK RESET ON EXIT ***************
SUB SYSCLOCK
SHARED AX,BX
REG BX,3
REG AX,&H0FFFF
CALL INTERRUPT &H80
TEMP&=&HFFFF/1193180

LOCATE 22,1
PRINT "                                               "
LOCATE 22,1
PRINT "SYSTEM CLOCK RESET ESTABLISHED AT ";TEMP&;"HZ"
END SUB


'*F6**************** PLAY MUSIC****************
SUB PLAYER
SHARED AX,BX,DX,STRSEG%,OFFSET%,Y%
REG BX,6
REG DX,STRSEG%
REG AX,OFFSET%
CALL INTERRUPT &H80
Y%=REG(AX)
LOCATE 22,1
PRINT "                                                        "
LOCATE 22,1
PRINT "MUSIC BEGUN WITH ";

IF Y%=0 THEN
PRINT "NO ERROR."
END IF
IF Y%=1 THEN
PRINT "ERROR!!! ANOTHER MUSIC WAS ACTIVE."
END IF
'PRINT "AX=";Y%
END SUB

'*F7***********************STOP MUSIC IMMEDIATLY***********
SUB STOPPER
SHARED AX,BX,CX,DX
REG BX,7
CALL INTERRUPT &H80
Y%=REG(AX)
LOCATE 21,1
PRINT "                                                        "
LOCATE 21,1
'PRINT
PRINT "MUSIC STOPPED WITH ";

IF Y%=0 THEN
PRINT "NO ERROR."
END IF
IF Y%=1 THEN
PRINT "ERROR!!! NO MUSIC WAS ACTIVE."
END IF
PRINT "ERROR! MUSIC WAS FINISHED AX=";HEX$(Y%)
END SUB

' ******************* MAKES A MIDI SCALE ******************
SUB MAKESCALE
SHARED TY,MUSIC$,SCALE,INSNUM%,SCALE$
PRINT "MAKING SCALE"
'        DELTA 0    CONTROL CHANGE CHAN 0 NUM.=H67 VALUE=0=MELODY MODE
'MUSIC$=CHR$(0)+CHR$(&HB0)+CHR$(&H67)+CHR$(0)
TY=1
for ty=1 TO INSNUM%
for scale = 20 to 120 STEP 10

   '          DELTA                          NOTE.CH.ON   NOTE    VELOCITY
MUSIC$=MUSIC$+CHR$((3)AND &B11111110)+CHR$((&H90)+TY)+CHR$(scale)+CHR$(120)
   '          DELTA               NOTE.CH.ON   NOTE    0 VELOCITY (NOTE OFF)
'MUSIC$=MUSIC$+CHR$((3)AND &B11111110)+CHR$((&H90)+TY)+CHR$(scale)+CHR$(0)

   '      DELTA     PROGRAM CHANGE CHANNEL TY TO INSTRUMENT TY
MUSIC$=MUSIC$+CHR$(1)+CHR$(&HC0+TY)+CHR$(TY)

NEXT SCALE
NEXT TY
   '                   SYSTEM RESET THIS DATA UNNEEDED
MUSIC$=MUSIC$+CHR$(0)+CHR$(&HFF)+CHR$(&H2F)+CHR$(&H0)
   '                  CONTROLL CHG 0 (MOD WHEEL) VIBRATO
'MUSIC$=MUSIC$+CHR$(0)+CHR$(&HB0+1)+CHR$(&123)+CHR$(&H0)
MUSIC$=CHR$(1)+CHR$(&HC0+1)+CHR$(1)
MUSIC$=MUSIC$+CHR$((3)AND &B11111110)+CHR$((&H90)+1)+CHR$(60)+CHR$(120)
SCALE$=MUSIC$
END SUB

'**************************MODIFY SONG PARMS *******************
SUB MODISONG
SHARED SONGPARMS%(),SONGPARMS$(),IBANK$,IOFFSET%,INSNUM%,STRSEG%
SHARED MLNGTH%,OFFSET%,TY,MUSIC$,SCALE,HZ%,AX,BX,CX,DX,SONG$,SCALE$,REDRAW
LASTTASK%=1
CLS

PLAYIT=0

'GOTO ENDD
TASKNUM%=1
TASKMAX%=24
TASKMIN%=1
MIN%=0
MAX%=0
'DMULTIPLE
   KEYCOUNT%=SONGPARMS%(1,4)
   MIN%=0
   MAX%=SONGPARMS%(1,1)

'CLS
REDRAW = 1

KEYROUNDS:
IF REDRAW=1 THEN
FOR TASKNUM%=1 TO TASKMAX%

LOCATE SONGPARMS%(TASKNUM%,5),SONGPARMS%(TASKNUM%,6)
PRINT SPACE$(20)
LOCATE SONGPARMS%(TASKNUM%,5),SONGPARMS%(TASKNUM%,6)
PRINT TASKNUM%;SONGPARMS$(TASKNUM%,1);"= ";SONGPARMS%(TASKNUM%,4);" OF ";SONGPARMS%(TASKNUM%,1);" MAX "
'PRINT TASKNUM%;SONGPARMS$(TASKNUM%,1);"= ";CINT(SONGPARMS%(TASKNUM%,4)/SONGPARMS%(TASKNUM%,1)*100+.5);" %   "
NEXT TASKNUM%

TASKNUM%=1
REDRAW=0
END IF
'KEYROUNDS:

S$=INKEY$

IF LEN(S$)>0 THEN

IF LEN(S$)>1 THEN
X$=RIGHT$(S$,1)

IF X$="G" THEN    'G HOME
GOTO KEYROUNDENDS
END IF

IF X$="H" THEN    '72 H UP ARROW
KEYCOUNT%=KEYCOUNT%+1

ELSEIF X$="P" THEN    '80 P DA
KEYCOUNT%=KEYCOUNT%-1


ELSEIF X$="K" THEN    '75 K LEFT ARROW
TASKNUM%=TASKNUM%-1

   IF TASKNUM%<TASKMIN% THEN
   TASKNUM%=TASKMAX%
   END IF

   KEYCOUNT%=SONGPARMS%(TASKNUM%,4)
   MIN%=0
   MAX%=SONGPARMS%(TASKNUM%,1)

ELSEIF X$="M" THEN    '77 M RIGHT ARROW
TASKNUM%=TASKNUM%+1

   IF TASKNUM%>TASKMAX% THEN
   TASKNUM%=TASKMIN%
   END IF

   KEYCOUNT%=SONGPARMS%(TASKNUM%,4)
   MIN%=0
   MAX%=SONGPARMS%(TASKNUM%,1)

END IF                             'WHICH ARROW
END IF                             'GREATER THAN 1?

IF S$="*" THEN
CLS
CALL MAKESONG
PRINT "SONG COMPOSING FINISHED"
END IF

   IF KEYCOUNT%>MAX% THEN
   KEYCOUNT%=MIN%
   END IF

   IF KEYCOUNT%<MIN% THEN
   KEYCOUNT%=MAX%
   END IF

SONGPARMS%(TASKNUM%,4)=KEYCOUNT%

IF LASTTASK%<>TASKNUM% THEN

COLOR 7,0      ' SET BACK TO WHITE ON BLACK
LOCATE SONGPARMS%(LASTTASK%,5),SONGPARMS%(LASTTASK%,6)
PRINT SPACE$(20)
LOCATE SONGPARMS%(LASTTASK%,5),SONGPARMS%(LASTTASK%,6),1
PRINT LASTTASK%;SONGPARMS$(LASTTASK%,1);"= ";SONGPARMS%(LASTTASK%,4); " OF ";SONGPARMS%(LASTTASK%,1);" MAX "
'PRINT TASKNUM%;SONGPARMS$(TASKNUM%,1);"= ";CINT(SONGPARMS%(TASKNUM%,4)/SONGPARMS%(TASKNUM%,1)*100+.5);" %  "
'LOCATE SONGPARMS%(TASKNUM%,5),SONGPARMS%(TASKNUM%,6),1
END IF

COLOR 0,7
LOCATE SONGPARMS%(TASKNUM%,5),SONGPARMS%(TASKNUM%,6)
PRINT SPACE$(20)
LOCATE SONGPARMS%(TASKNUM%,5),SONGPARMS%(TASKNUM%,6),1
PRINT TASKNUM%;SONGPARMS$(TASKNUM%,1);"= ";
COLOR 0,7
PRINT SONGPARMS%(TASKNUM%,4);
COLOR 7,0
PRINT " OF ";SONGPARMS%(TASKNUM%,1);" MAX "
'PRINT TASKNUM%;SONGPARMS$(TASKNUM%,1);"= ";CINT(SONGPARMS%(TASKNUM%,4)/SONGPARMS%(TASKNUM%,1)*100+.5);" %  "
LOCATE SONGPARMS%(TASKNUM%,5),SONGPARMS%(TASKNUM%,6),1
COLOR 7,0

LASTTASK%=TASKNUM%

if X$="I" THEN  'PG UP I IS SPEED UP
 HZ%=HZ%*1.5
 CALL CLOCKRATE
ELSEIF X$="Q" THEN   'PG DN Q IS SLOW DOWN
 HZ%=HZ%*.5
 CALL CLOCKRATE
END IF

IF X$="S" THEN 'TOGGLE PLAY IT? WITH DEL BUTTON
IF PLAYIT=1 THEN
PLAYIT=0
ELSE
PLAYIT=1
END IF
END IF

' R IS INS KEY O IS END KEY
IF PLAYIT=1 OR X$="O" OR X$="R" THEN

IF X$="H"  OR X$="P" OR X$="O" OR X$="I" OR X$="Q" OR X$="R" THEN  ' PLAY INSTRUMENT ON PARAMETER CHANGE

IF PLAYIT=1 THEN
CALL MAKESONG
END IF
'******************
INSNUM%=SONGPARMS%(23,4)

CALL STOPPER  '7

CALL INSLOC
LOCATE 23,1
PRINT "               "
LOCATE 23,1
PRINT "INSLOC PASSED"

CALL INSPASS    '2
LOCATE 23,1
PRINT "              ";
LOCATE 23,1
PRINT "INSPASSED"
'CALL MSTATUS    '1
'CALL CLOCKRATE  '4
'CALL SYSCLOCK   '3
'DELAY .5

IF X$="R" THEN ' IF INS DEPRESSED PLAY SONG NOT MUSIC

'TEMP$=MUSIC$
MUSIC$=SONG$
'SONG$=TEMP$
ELSE
MUSIC$=SCALE$
END IF

CALL MUSICLOC

'DELAY .5
CALL PLAYER       '6
LOCATE 23,1
PRINT "              "
LOCATE 23,1

SKIPIBANK:
PRINT "PLAYER CALLED IBANK =";LEN(IBANK$)
END IF  ' PLAY INSTRUMENT Y/N SETTING

END IF   ' PLAY INSTRUMENT ON PARAMETER CHANGE

END IF                             'GREATER THAN 0?

   If Right$(s$,1)=";" and LEN(S$)=2 THEN
     call helper
   END IF

GOTO KEYROUNDS

KEYROUNDENDS:

END SUB

' ******************* MAKES A MIDI SONG ******************
SUB MAKESONG
SHARED SONG$,SONGPARMS%(),REDRAW
CLS

PRINT "MAKING SONG"
'        DELTA 0    CONTROL CHANGE CHAN 0 NUM.=H67 VALUE=0=MELODY MODE
'MUSIC$=CHR$(0)+CHR$(&HB0)+CHR$(&H67)+CHR$(0)

CLOCKSPD%=SONGPARMS%(1,4) '96
TEMPO%=SONGPARMS%(2,4) '120
CLENGTH%=SONGPARMS%(3,4) '4
LENGTHDEV%=SONGPARMS%(4,4) '2
FRONTDELAY%=SONGPARMS%(5,4) '
BACKDELAY%=SONGPARMS%(6,4) '
CENTERNOTE%=SONGPARMS%(7,4) '44  ' IN MIDI NOTE NUMBER 60 IS MIDDLE C
PITCHDEV%=SONGPARMS%(8,4) '6        ' IN NOTES
STRIKE%=SONGPARMS%(9,4) '0
NOTENUM%=SONGPARMS%(10,4) '34
MAXCHAN%=SONGPARMS%(11,4) '15
MINCHAN%=SONGPARMS%(12,4) '12
MAXPATTERNS%=SONGPARMS%(13,4) '6  'MAX NUMBER OF PATTERNS TO CHOSE FROM
MINPATTERNS%=SONGPARMS%(14,4) '3
MAXPATTCNTS%=SONGPARMS%(15,4) '5   ' MAX NUMBER OF PATTERN SWITCHES TO MAKE
MINPATTCNTS%=SONGPARMS%(16,4) '5
MAXMINIPATS%=SONGPARMS%(17,4) '3   'MAX NUMBER OF MINIPATTERNS TO CHOOSE FROM
MINMINIPATS%=SONGPARMS%(18,4) '2
MAXMINIPATSCNTS%=SONGPARMS%(19,4) '2  'MAX NUMBER OF MINIPATTERNS IN A PATTERN
MINMINIPATSCNTS%=SONGPARMS%(20,4) '1
MAXPATSNOTES%=SONGPARMS%(21,4) '25  'MAX NUMBER OF NOTES IN A MINIPATTERN
MINPATSNOTES%=SONGPARMS%(22,4) '22
NUMCHANS%=SONGPARMS%(23,4)
SHARPS%=SONGPARMS%(24,4)

'COMPUTE NUM OF PATTERNS
PATTERNS%=INT(RND*(MAXPATTERNS%-MINPATTERNS%)+MINPATTERNS%)
PRINT "PATTERNS%=";PATTERNS%
DIM PATTERN$(PATTERNS%)  'MAKE A STRING ARRRAY FOR THE PATTERNS

FOR PATTMADE=1 TO PATTERNS%   'FOR EACH PATTERN- MAKE EACH PATTERN
PATTERN$(PATTMADE)=""

'COMPUTE NUM OF MINIPATTS TO CHOOSE FROM

MINIPATS%=INT(RND*(MAXMINIPATS%-MINMINIPATS%)+MINMINIPATS%)
DIM MINIPATT$(MINIPATS%)
PRINT "MINIPATS%=";MINIPATS%

FOR MINIPATTMADE=1 TO MINIPATS%  'FOR EACH MINIPATT-MAKE THE MINIPATT
MINIPATT$(MINIPATTMADE)=""

PATSNOTES%=INT(RND*(MAXPATSNOTES-MINPATSNOTES%)+MINPATSNOTES%)

FOR PATSNOTEMADE%=1 TO PATSNOTES%

NOFLATS:
NOTE%=CENTERNOTE%-PITCHDEV%+INT(RND*2*PITCHDEV%)    '?
CATCH% = NOTE% MOD 12
IF SHARPS%<>1 AND ( CATCH% = 2 OR CATCH% = 4 _
            OR CATCH% =  7 OR  CATCH% = 9 OR  CATCH% = 11) THEN
'PRINT  " NOTE WAS AN UNWANTED FLAT OR SHARP !!!"
GOTO NOFLATS
END IF
'CHANNEL%=PATSNOTEMADE%
'CHANNEL%=INT((RND*NUMCHANS%)+1)
CHANNEL%=INT(RND*(MAXCHAN%-MINCHAN%)+MINCHAN%)
NOTELENGTH%=CLENGTH%-LENGTHDEV%+INT(RND*2*LENGTHDEV%)
'STARTDELAY%=

MINIPATT$(MINIPATTMADE)=MINIPATT$(MINIPATTMADE)+_
 _  '          DELTA                          NOTE.CH.ON   NOTE    VELOCITY
CHR$((3)AND &B01111111)+CHR$((&H90)+CHANNEL%)+CHR$(NOTE%)+CHR$(STRIKE%)_
 _  '          DELTA               NOTE.CH.ON   NOTE    0 VELOCITY (NOTE OFF)
+CHR$((3)AND &B01111111)+CHR$((&H90)+CHANNEL%)+CHR$(NOTE%)+CHR$(0)
NEXT PATSNOTEMADE%
PRINT "               LENGTH OF MINIPATTERN IS ";LEN(MINIPATT$(MINIPATTMADE))
NEXT MINIPATTMADE

MINIPATTSTOADD%=INT(RND*(MAXMINIPATSCNTS%-MINMINIPATSCNTS%)+MINMINIPATSCNTS%)

FOR MINIPATTADDED=1 TO  MINIPATTSTOADD%
PATTERN$(PATTMADE)=PATTERN$(PATTMADE)+MINIPATT$(INT(RND*(MINIPATS%-1)+1))
NEXT MINIPATTADDED

PRINT "LENGTH OF PATTERN$(";PATTMADE;" IS ";LEN(PATTERN$(PATTMADE))

ERASE MINIPATT$
PRINT "*MINIPATT$ ERASED"
NEXT PATTMADE

PATTCNTS%=INT(RND*(MAXPATTCNTS%-MINPATTCNTS%)+MINPATTCNTS%)
SONG$=""

'CONTROL CHANGE TO SELECT MELODY OR RHYTHM MODE
'        DELTA 0    CONTROL CHANGE CHAN 0 NUM.=H67, 0=MELODY MODE,1=RHYTHM
SONG$=CHR$(0)+CHR$(&HB0)+CHR$(&H67)+CHR$(1)


'********************
              '      DELTA     PROGRAM CHANGE CHANNEL TY TO INSTRUMENT TY


' DO A PROG CHANGE FOR EACH CHANNEL USED
FOR PROG% = 0 TO (NUMCHANS%-1)
'********************
SONG$=SONG$+CHR$(1)+CHR$(&HC0+PROG%)+CHR$(&B01111111 AND PROG%)
NEXT PROG%

FOR PATTADDED  = 1 TO PATTCNTS%
PATTNUM%=INT(RND*(PATTERNS%-1)+1)
SONG$=SONG$+PATTERN$(PATTNUM%)
PRINT PATTNUM%;" PATTERN ADDED TO SONG. LENTGH IS ";LEN(PATTERN$(PATTNUM%))
NEXT PATTADDED
ERASE PATTERN$
PRINT "***PATTERN$ ERASED"

'NEXT NOTE

   '                   SYSTEM RESET THIS DATA UNNEEDED
'MUSIC$=MUSIC$+CHR$(0)+CHR$(&HFF)+CHR$(&H2F)+CHR$(&H0)
   '                  CONTROLL CHG 0 (MOD WHEEL) VIBRATO
'MUSIC$=MUSIC$+CHR$(0)+CHR$(&HB0+1)+CHR$(&123)+CHR$(&H0)
'MUSIC$=CHR$(1)+CHR$(&HC0+1)+CHR$(1)
'MUSIC$=MUSIC$+CHR$((3)AND &B11111110)+CHR$((&H90)+1)+CHR$(60)+CHR$(120)


 PRINT "SONG IS ";LEN(SONG$);" BYTES LONG"
CLS
REDRAW=1

END SUB




'*****************MODIFY THE INSTRUMENT FILE**************
SUB INSTRUMENT
SHARED IBANK$,IOFFSET%,INSNUM%,STRSEG%,MLNGTH%,OFFSET%,TY,MUSIC$,SCALE,HZ%,AX,BX,CX,DX,SONG$,TEMP$,TASKARRAY%(),TASKNAMES$(),REDRAW,SCALE$

'STATIC TASKARRAY%(),TASKNAMES$()
PLAYIT=1


'GOTO ENDD
TASKNUM%=1
TASKMAX%=29
TASKMIN%=1
MIN%=0
MAX%=0
'DMULTIPLE
   KEYCOUNT%=TASKARRAY%(1,4)
   MIN%=0
   MAX%=TASKARRAY%(1,1)

'CLS
REDRAW=1

KEYROUND:

IF REDRAW= 1 THEN
FOR TASKNUM%=1 TO 29
IF TASKNUM%=27 OR TASKNUM%=25 OR TASKNUM%=23 THEN GOTO SKIPIT

LOCATE TASKARRAY%(TASKNUM%,5),TASKARRAY%(TASKNUM%,6)
PRINT SPACE$(20)
LOCATE TASKARRAY%(TASKNUM%,5),TASKARRAY%(TASKNUM%,6)
PRINT TASKNUM%;TASKNAMES$(TASKNUM%,1);"= ";TASKARRAY%(TASKNUM%,4);" OF ";TASKARRAY%(TASKNUM%,1);" MAX "
'PRINT TASKNUM%;TASKNAMES$(TASKNUM%,1);"= ";CINT(TASKARRAY%(TASKNUM%,4)/TASKARRAY%(TASKNUM%,1)*100+.5);" %   "
SKIPIT:
NEXT TASKNUM%

TASKNUM%=1
REDRAW=0
END IF

'KEYROUND:

S$=INKEY$

IF LEN(S$)>0 THEN

IF LEN(S$)>1 THEN
X$=RIGHT$(S$,1)

IF X$="G" THEN    'G HOME
GOTO KEYROUNDEND
END IF

IF X$="H" THEN    '72 H UP ARROW
KEYCOUNT%=KEYCOUNT%+1

ELSEIF X$="P" THEN    '80 P DA
KEYCOUNT%=KEYCOUNT%-1


ELSEIF X$="K" THEN    '75 K LEFT ARROW
TASKNUM%=TASKNUM%-1
IF TASKNUM%=27 OR TASKNUM%=25 OR TASKNUM%=23 THEN TASKNUM%=TASKNUM%-1

   IF TASKNUM%<TASKMIN% THEN
   TASKNUM%=TASKMAX%
   END IF

   KEYCOUNT%=TASKARRAY%(TASKNUM%,4)
   MIN%=0
   MAX%=TASKARRAY%(TASKNUM%,1)

ELSEIF X$="M" THEN    '77 M RIGHT ARROW
TASKNUM%=TASKNUM%+1
IF TASKNUM%=27 OR TASKNUM%=25 OR TASKNUM%=23 THEN TASKNUM%=TASKNUM%+1

   IF TASKNUM%>TASKMAX% THEN
   TASKNUM%=TASKMIN%
   END IF

   KEYCOUNT%=TASKARRAY%(TASKNUM%,4)
   MIN%=0
   MAX%=TASKARRAY%(TASKNUM%,1)

END IF                             'WHICH ARROW
END IF                             'GREATER THAN 1?

IF S$="*" THEN
CALL MAKESONG
PRINT "SONG COMPOSING FINISHED"
END IF

   IF KEYCOUNT%>MAX% THEN
   KEYCOUNT%=MIN%
   END IF

   IF KEYCOUNT%<MIN% THEN
   KEYCOUNT%=MAX%
   END IF
   TASKARRAY%(TASKNUM%,4)=KEYCOUNT%

LOCATE TASKARRAY%(TASKNUM%,5),TASKARRAY%(TASKNUM%,6)
PRINT SPACE$(20)
LOCATE TASKARRAY%(TASKNUM%,5),TASKARRAY%(TASKNUM%,6),1
PRINT TASKNUM%;TASKNAMES$(TASKNUM%,1);"= ";TASKARRAY%(TASKNUM%,4);" OF ";TASKARRAY%(TASKNUM%,1);" MAX "
'PRINT TASKNUM%;TASKNAMES$(TASKNUM%,1);"= ";CINT(TASKARRAY%(TASKNUM%,4)/TASKARRAY%(TASKNUM%,1)*100+.5);" %  "
LOCATE TASKARRAY%(TASKNUM%,5),TASKARRAY%(TASKNUM%,6),1

if X$="I" THEN  'PG UP I IS SPEED UP
 HZ%=HZ%*1.5
 CALL CLOCKRATE
ELSEIF X$="Q" THEN   'PG DN Q IS SLOW DOWN
 HZ%=HZ%*.5
 CALL CLOCKRATE
END IF

IF X$="S" THEN 'TOGGLE PLAY IT? WITH DEL BUTTON
IF PLAYIT=1 THEN
PLAYIT=0
ELSE
PLAYIT=1
END IF
END IF


IF PLAYIT=1 OR X$="O" OR X$="R" THEN

IF X$="H"  OR X$="P" OR X$="O" OR X$="I" OR X$="Q" OR X$="R" THEN  ' PLAY INSTRUMENT ON PARAMETER CHANGE

' TRANSFER INSTRUMENT DATA IN ARRAY TO IBANK FORMAT STRING
      '  AM                          VIB                      EG-TYGE                      KSR               MULTIPLE

IBANK$=""
IBANK$=IBANK$+CHR$(&B10000000*TASKARRAY%(1,4)+&B1000000*TASKARRAY%(2,4)+&B100000*TASKARRAY%(3,4)+&B10000*TASKARRAY%(4,4)+TASKARRAY%(5,4))
IBANK$=IBANK$+CHR$(&B10000000*TASKARRAY%(6,4)+&B1000000*TASKARRAY%(7,4)+&B100000*TASKARRAY%(8,4)+&B10000*TASKARRAY%(9,4)+TASKARRAY%(10,4))
      ' KSL                        TL
IBANK$=IBANK$+CHR$(&B1000000*TASKARRAY%(11,4)+TASKARRAY%(12,4))
IBANK$=IBANK$+CHR$(&B1000000*TASKARRAY%(13,4)+TASKARRAY%(14,4))
      ' AR                          DR
IBANK$=IBANK$+CHR$(&B10000*TASKARRAY%(15,4)+TASKARRAY%(16,4))
IBANK$=IBANK$+CHR$(&B10000*TASKARRAY%(17,4)+TASKARRAY%(18,4))
      ' SL                          RR
IBANK$=IBANK$+CHR$(&B10000*TASKARRAY%(19,4)+TASKARRAY%(20,4))
IBANK$=IBANK$+CHR$(&B10000*TASKARRAY%(21,4)+TASKARRAY%(22,4))
      'WS
IBANK$=IBANK$+CHR$(TASKARRAY%(24,4))
IBANK$=IBANK$+CHR$(TASKARRAY%(26,4))

IBANK$=IBANK$+CHR$(&B10*TASKARRAY%(28,4)+TASKARRAY%(29,4))
IBANK$=IBANK$+"     "
'INSNUM%=16
'ibank$=""
'ITEMP$=IBANK$
'IBANK$=""

FOR INS= 1 TO INSNUM%
'IBANK$=IBANK$+ITEMP$
NEXT INS

bullshit=bullshit + 1
for tsx=1 to 16
'ibank$=ibank$+chr$(bullshit)
next tsx
LOCATE 23,1
PRINT "               "
LOCATE 23,1
PRINT "IBANK MADE"
'IBANK$="4444444444444444"

CALL STOPPER  '7

CALL INSLOC

LOCATE 23,15
PRINT "INSLOC PASSED"
LOCATE 23,15
PRINT "               "

CALL INSPASS    '2

LOCATE 23,8
PRINT "INSPASSED"
LOCATE 23,8
PRINT "              ";

'CALL MSTATUS    '1
'CALL CLOCKRATE  '4
'CALL SYSCLOCK   '3
'DELAY .5

IF X$="R" THEN ' IF INS DEPRESSED PLAY SONG NOT MUSIC
TEMP$=MUSIC$

IF SONG$="" THEN
CALL MAKESONG
END IF

MUSIC$=SONG$
'SONG$=TEMP$

ELSE
MUSIC$=SCALE$
END IF

CALL MUSICLOC

'DELAY .5
CALL PLAYER       '6
LOCATE 23,1
PRINT "              "
LOCATE 23,1



PRINT "PLAYER CALLED IBANK =";LEN(IBANK$)
END IF  ' PLAY INSTRUMENT Y/N SETTING

END IF   ' PLAY INSTRUMENT ON PARAMETER CHANGE

END IF                             'GREATER THAN 0?

   If Right$(s$,1)=";" and LEN(S$)=2 THEN
     call helper
   END IF

GOTO KEYROUND

KEYROUNDEND:

END SUB

$IF %COMPILE    ' COMPILE IS UNDECLARED SO DON'T COMPILE THIS
' -------------UNUSED BULLSHIT FOLLOWS----------------------------


' *********************** READ A SONG FILE **********************
ACTION:
OPEN "B:AULD.CMF" FOR BINARY AS #1

CHKCMF:
SEEK #1,0
GET$ #1,4,HEADER$         'MSTART&-1,HEADER$
print "header string is : " ;header$
GET$ #1,1,FFM$
GET$ #1,1,FFL$
PRINT "VERSION IS ";ASC(FFL$);".";ASC(FFM$)


GETMUSIC:
SEEK #1,8
GET$ #1,1,MUSICLOCL$
GET$ #1,1,MUSICLOCM$
MSTART&=ASC(MUSICLOCM$)*256+ASC(MUSICLOCL$)
SEEK #1,MSTART&
MEND&=LOF(1)
PRINT
PRINT "MUSIC STARTS AT BYTE "; MSTART&;"LOCATED AT ";LOC(1)
Print "MUSIC ENDS AT BYTE  "; LOF(1)
PRINT "MUSIC LENGTH IS "; MEND&-MSTART&; " BYTES LONG"
GET$ #1,MEND&-MSTART&,MUSIC$
'CLOSE #1
'MUSIC$=CHR$(00)+CHR$(&HB3)+CHR$(&H67)+CHR$(1)+MUSIC$
GETINS:
SEEK #1,&H24
GET$ #1,1,INSNL$
GET$ #1,1,INSNM$
INSNUM%=ASC(INSNM$)*256+ASC(INSNL$)

SEEK #1,6
GET$ #1,1,INSLOCL$
GET$ #1,1,INSLOCM$
ISTART&=ASC(INSLOCM$)*256+ASC(INSLOCL$)
PRINT "****************************************************************"
PRINT "INS BANK STARTS AT ";ISTART&
PRINT " THE SONG HAS ";INSNUM%;" INSTRUMENTS."
SEEK #1,ISTART&
GET$ #1,INSNUM%*16,IBANK$
'CLOSE #1

'GOTO SKIPPRN



' ************ SKIP ALL THIS THAT PRINTS SONG DATA**************
DEF SEG=VARSEG(IBANK$)
IOFFSET%=PEEK(VARPTR(IBANK$)+2)+PEEK(VARPTR(IBANK$)+3)*256
DEF SEG

PRINT  "LENGTH OF THE MUSIC STRING IS ";MLNGTH%
DELAY .2


DEF SEG
get$ #1,1,mtemp$
DEF SEG=STRSEG%
PRINT "memOFF ";OFFSET%;" DEC ";PEEK(OFFSET%)," HEX:";HEX$(PEEK(OFFSET%)),LEFT$("00000000",8-LEN(BIN$(PEEK(OFFSET%))));BIN$(PEEK(OFFSET%))
DEF SEG
PRINT "filoff ";loc(1)-MSTART&;" ";asc(mtemp$)," HEX:";HEX$(asc(mtemp$)),LEFT$("00000000",8-LEN(BIN$(asc(mtemp$))));BIN$(asc(mtemp$))
'DELAY 3
GOTO SKIPPRN

PRINTFILES:

seek #1,mstart&

FOR MPOS%=OFFSET%+MEND&-MSTART&-10 TO OFFSET%+MEND&-MSTART&
DEF SEG
get$ #1,1,mtemp$
DEF SEG=STRSEG%
PRINT "memOFF ";MPOS%-OFFSET%;" DEC ";PEEK(MPOS%)," HEX:";HEX$(PEEK(MPOS%)),LEFT$("00000000",8-LEN(BIN$(PEEK(MPOS%))));BIN$(PEEK(MPOS%))
PRINT  "LAST BYTE " ;HEX$(PEEK(MLNGTH%+OFFSET%))
DEF SEG
'PRINT "filoff ";loc(1)-MSTART&;" ";asc(mtemp$)," HEX:";HEX$(asc(mtemp$)),LEFT$("00000000",8-LEN(BIN$(asc(mtemp$))));BIN$(asc(mtemp$))
print

'PRINT "OFFSET ";MPOS%-VARPTR(MUSIC$);" ";PEEK(MPOS%)," HEX:";HEX$(PEEK(MPOS%)),LEFT$("00000000",8-LEN(BIN$(PEEK(MPOS%))));BIN$(PEEK(MPOS%));
DEF SEG=STRSEG%
IF PEEK(MPOS%) >= 128 THEN
PRINT " IS A STATUS BYTE"
ELSE
PRINT "                    DATA BYTE"
END IF
PRINT "****************************************************"
SCR=SCR+1
IF SCR=1 THEN
LOOPER:
IF LEN(INKEY$)=0 THEN
GOTO LOOPER
END IF

'DELAY 1
PRINT
'CLS
SCR=0
END IF

NEXT MPOS%

SKIPPRN:

DEF SEG
' goto endd
'END SUB       '%%%%%%%%%%%%%%
'GOTO MPLAY

CALL INSPASS

' ----------------MPLAY--------------------------------------
MPLAY:
CALL PLAYER

PRINT " MUSIC STATUS BYTE =";HEX$(MSTATUS%);" SHOULD BE FF"
PRINT " MUSIC STATUS BYTE =";HEX$(MSTATUS%);" SHOULD BE FF"

SELFSTOP:
PRINT " MUSIC STATUS BYTE =";HEX$(MSTATUS%);" SHOULD BE FF WHEN ON"
if hex$(mstatus%)="0" then
PRINT " MUSIC STATUS BYTE =";HEX$(MSTATUS%);" NOW OFF"
end if

ARRAYTEST:
QUITTER:
S$=INKEY$
IF LEN(S$)=1 THEN
IF S$="I" THEN   ' I MEANS CHANGE INSTRUMENT
 INSNUM%=1
 LAST = LAST+1
 IBANK$=""
 FOR INCNT=1 TO INSNUM%
 FOR ICNT = 1 TO 16
 IBANK$=IBANK$+CHR$(ICNT+LAST)
 NEXT ICNT
 NEXT INCNT

 call stopper
 CALL INSLOC
 call inspass
 GOTO MPLAY
ELSEIF S$="Q" THEN   'Q TO END PROGRAM
GOTO ENDDER
elseif S$="E" THEN  'E IS SPEED UP
 HZ%=HZ%*1.5
 CALL CLOCKRATE
ELSEIF S$="D" THEN   'D IS SLOW DOWN
 HZ%=HZ%*.5
 CALL CLOCKRATE
ELSEIF S$="R" THEN    ' R IS REPEAT
 CALL STOPPER
 GOTO MPLAY
ELSE
 GOTO STOPP
END IF                      ' END OF WHAT KEY

END IF                      ' END OF KEY PRESSED ?  TEST
GOTO QUITTER
'GOTO SELFSTOP


STOPP:
CALL STOPPER
GOTO QUITTER

RESETDRV:

ENDDER:
CALL STOPPER
CALL RESETDRV

'GOTO ACTION
$ENDIF                 ' COMPILE HERE


endd:
CALL STOPPER
CALL RESETDRV

def seg
CLOSE #1
LOCATE 23,25
'PRINT
PRINT "THAT'S ALL FOLKS!"


